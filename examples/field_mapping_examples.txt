// Body and format.
$this->addFieldMapping('field_pr_body', 'body');
$this->addFieldMapping('field_pr_body:format')->defaultValue('wysiwyg');

// Taxonomy reference field.
$this->addFieldMapping('field_component', 'field_component')
  ->defaultValue(array($component_tid));
$this->addFieldMapping('field_component:source_type')->defaultValue('tid');


// Geofield / Location field.
$this->addFieldMapping('field_location', 'country')->defaultValue('US');
$this->addFieldMapping('field_location:locality', 'city');
$this->addFieldMapping('field_location:administrative_area', 'state');

--------------------------------------------------------------------------------
// Attached files.
$this->addFieldMapping('field_attachment', 'attachment_filename');
$this->addFieldMapping('field_attachment:source_type')
  ->defaultValue('filename');
$this->addFieldMapping('field_attachment:file_class')
  ->defaultValue('MigrateFileUri');
$this->addFieldMapping('field_attachment:destination_dir', 'destination_dir');
$this->addFieldMapping('field_attachment:source_dir', 'source_dir');
$this->addFieldMapping('field_attachment:file_replace')
  ->defaultValue(FILE_EXISTS_REUSE);

// Map title and alt tags. In prepareRow you will want to enforce a 512 char
// limit on alt and title to avoid a db error if one is too long.
$this->addFieldMapping('field_image:alt', 'image_alt');
$this->addFieldMapping('field_image:title', 'image_title');

// For file storage you might want to use something like this in prepareRow()
// to handle the destination
$row->destination_dir = "public:///${group}/";

// If attaching files, you want to make sure they are removed on rollback.
/**
   * {@inheritdoc}
   */
  public function prepareRollback($entity_id) {
    $entities = entity_load('node', $entity_id);
    $entity = reset($entities);

    $this->rollbackAttachmentRedirect($entity, 'field_attachment');
  }

--------------------------------------------------------------------------------
