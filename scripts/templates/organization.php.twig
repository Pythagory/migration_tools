<?php

/**
 * @file
 * Defines migration classes for {{ info.full_name }}.
 */

/**
 * Migrates .html files from /{{ info.abbreviation }} to page nodes.
 *
 * @package doj_migration
 * @subpackage {{ info.abbreviation }}
 */
class {{ info.class }}PageMigration extends NGJusticeHtmlToPageMigration {

  /**
   * {@inheritdoc}
   */
  public function __construct($arguments) {

    // Define source directories.
    $source_dirs = array(
      '{{ info.directory }}',
    );

    $options = array('recurse' => TRUE);

    // Parent constructor will set $this->source, $this->destination, and
    // $this->map.
    parent::__construct($arguments, $source_dirs, NULL, $options);
    $this->dependencies = array('Organization');
    $this->description = t('Migrates pages from the {{ info.full_name }}.');
    $this->addFieldMapping('og_group_ref')
    ->defaultValue('{{ info.abbreviation }}')
    ->sourceMigration('Organization');
  }

  /**
   * {@inheritdoc}
   */
  public function prepareRow($row) {
    $skip_these = array();
    if (parent::prepareRow($row) === FALSE || doj_migration_skip_file($row->fileid, $skip_these)) {
      return FALSE;
    }
  }
}

/**
 * Migrates files (*.pdf) from /{{ info.abbreviation }}.
 *
 * @package doj_migration
 * @subpackage {{ info.abbreviation }}
 */
class {{ info.class }}FileMigration extends JusticeDeployableBinaryFileMigration {

  /**
   * {@inheritdoc}
   */
  public function __construct($arguments) {
    $this->description = t('Migrates non-image files from the {{ info.directory }} subdirectory.');
    $this->dependencies = array('Organization');

    // Match .pdf files only.
    $source_dirs = array(
      '{{ info.directory }}',
    );

    $regex = '/.*\.(pdf|txt|rtf|doc|docx|xls|xlsx|csv|mp3|mp4|wpd|wp|qpw|xml|ppt|pptx)/';
    $dest_dir = 'public:///{{ info.abbreviation }}/docs';

    $options = array('recurse' => TRUE);

    // This will setup $this->map, $this->destination, and $this->source.
    // It will also add field mappings for file location and redirects, which
    // relies on prepareRow() defining $row->filepath and $row->legacy_path.
    parent::__construct($arguments, $source_dirs, $dest_dir, $regex, $options);
  }


  /**
   * {@inheritdoc}
   */
  public function getOrganizationAbbreviation() {
    return "{{ info.abbreviation }}";
  }
}

{% if info.press is defined %}
/**
 * Migrates press releases from /{{ info.abbreviation }}.
 *
 * @package doj_migration
 * @subpackage {{ info.abbreviation }}
 */
class {{ info.class }}PressReleaseMigration extends NGJusticeHtmlToPressReleaseMigration {

  /**
   * {@inheritdoc}
   */
  public function __construct($arguments) {
    $arguments['component'] = "{{ info.full_name }}";

    $source_dirs = array(
    {% for item in info.press %}
      {{ item | raw }}
    {% endfor %}
    );
    parent::__construct($arguments, $source_dirs);
  }
}
{% endif %}
